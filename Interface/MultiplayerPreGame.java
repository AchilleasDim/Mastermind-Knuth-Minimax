/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Controller.Player;
import Controller.Encryption;
import javax.swing.JOptionPane;

/**
 *
 * @author achilleas
 * 
 * this class is responsible for:
 * 1)specifying the roles of the first round
 * 2)to allow the two players whether they will play with hints or not
 * 3)if they do , what the added time per hint will be
 * 
 * Note: this class is only accessed when in multiplayer mode
 */
public class MultiplayerPreGame extends javax.swing.JFrame {

    private final Player activePlayer;
    private final Player activePlayer2;
    private Player codemaker;
    private Player codebraker;
    private boolean allowHints;
    private long addedTimePerHint;

    /**
     * Creates new form MultiplayerRoles
     * @param p
     * @param p2
     */
    public MultiplayerPreGame(Player p, Player p2) {
        initComponents();
        activePlayer = p;
        activePlayer2 = p2;

        //displays the usernames of the two players that can firstly play as codebrakers
        playerAsCodebraker.removeAllItems();
        playerAsCodebraker.addItem(Encryption.decrypt(activePlayer.getUsername()));
        playerAsCodebraker.addItem(Encryption.decrypt(activePlayer2.getUsername()));

        //displays the usernames of the two players that can firstly play as codemakers
        playerAsCodemaker.removeAllItems();
        playerAsCodemaker.addItem(Encryption.decrypt(activePlayer.getUsername()));
        playerAsCodemaker.addItem(Encryption.decrypt(activePlayer2.getUsername()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        playerAsCodebraker = new javax.swing.JComboBox<>();
        playerAsCodemaker = new javax.swing.JComboBox<>();
        codebrakerLabel = new javax.swing.JLabel();
        codemakerLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        allowHintsLabel = new javax.swing.JLabel();
        allowHintsOption = new javax.swing.JComboBox<>();
        addedTimeLabel = new javax.swing.JLabel();
        addedTimeOption = new javax.swing.JComboBox<>();
        icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(583, 289));
        jPanel1.setSize(new java.awt.Dimension(583, 289));

        playerAsCodebraker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        playerAsCodebraker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerAsCodebrakerActionPerformed(evt);
            }
        });

        playerAsCodemaker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        codebrakerLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        codebrakerLabel.setText("Codebreaker");

        codemakerLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        codemakerLabel.setText("Codemaker");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Choose your roles");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        allowHintsLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        allowHintsLabel.setText("Allow Hints");

        allowHintsOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        allowHintsOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allowHintsOptionActionPerformed(evt);
            }
        });

        addedTimeLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addedTimeLabel.setText("Added Time per Hint");

        addedTimeOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0s", "10s", "15s", "30s", "60s" }));
        addedTimeOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addedTimeOptionActionPerformed(evt);
            }
        });

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/logo .png"))); // NOI18N
        icon.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addedTimeLabel)
                        .addGap(4, 4, 4)
                        .addComponent(addedTimeOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(backButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startButton))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(codebrakerLabel)
                                .addComponent(codemakerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(allowHintsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(4, 4, 4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(playerAsCodebraker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(allowHintsOption, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(playerAsCodemaker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(39, 39, 39)
                                    .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerAsCodebraker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codebrakerLabel))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codemakerLabel)
                            .addComponent(playerAsCodemaker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allowHintsLabel)
                            .addComponent(allowHintsOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addedTimeLabel)
                            .addComponent(addedTimeOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton)
                            .addComponent(startButton))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playerAsCodebrakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerAsCodebrakerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerAsCodebrakerActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:

        //makes sure that the two players have two distinct roles
        if (!playerAsCodebraker.getSelectedItem().equals(playerAsCodemaker.getSelectedItem())) {

            //sets the codebraker accordingly
            if (playerAsCodebraker.getSelectedItem().equals(Encryption.decrypt(activePlayer.getUsername()))) {
                codebraker = activePlayer;
            } else {
                codebraker = activePlayer2;
            }

            //sets the codemaker accordingly
            if (playerAsCodemaker.getSelectedItem().equals(Encryption.decrypt(activePlayer.getUsername()))) {
                codemaker = activePlayer;
            } else {
                codemaker = activePlayer2;
            }

            //if the players have chosen to play with hints available
            if (allowHintsOption.getSelectedIndex() == 0) {
                allowHints = true;

                ///sets the chosen addedTimePerHint in milliseconds
                if (addedTimeOption.getSelectedIndex() == 0) {
                    addedTimePerHint = 0;
                } else if (addedTimeOption.getSelectedIndex() == 1) {
                    addedTimePerHint = 10000;
                } else if (addedTimeOption.getSelectedIndex() == 2) {
                    addedTimePerHint = 15000;
                } else if (addedTimeOption.getSelectedIndex() == 3) {
                    addedTimePerHint = 30000;
                } else if (addedTimeOption.getSelectedIndex() == 4) {
                    addedTimePerHint = 60000;
                }

            } else {
                allowHints = false;
                addedTimePerHint = 0;
            }

            /*
             redirects the two players to a new SettingCode screen
             int timesPlayed = 0 , implies that this is the first round,
             hence firstRoundResults = null 
            */
            SettingCode screen = new SettingCode(activePlayer, activePlayer2, codemaker, codebraker, 0, null, allowHints, addedTimePerHint);
            screen.setVisible(true);
            this.setVisible(false);

        } else {
            JOptionPane.showMessageDialog(null, "Please enter a valid combination of roles", "Invalid input", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_startButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        MultiplayerLogin screen = new MultiplayerLogin(activePlayer);
        screen.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void allowHintsOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allowHintsOptionActionPerformed
        // TODO add your handling code here:
        
        /*
         in case that the two players wish to play without hints , this if
         statement makes sure to set the addedTimeOption equal to 0
        */
         if(allowHintsOption.getSelectedIndex() == 1){
            addedTimeOption.setSelectedIndex(0);
        }
         
    }//GEN-LAST:event_allowHintsOptionActionPerformed

    private void addedTimeOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addedTimeOptionActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_addedTimeOptionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addedTimeLabel;
    private javax.swing.JComboBox<String> addedTimeOption;
    private javax.swing.JLabel allowHintsLabel;
    private javax.swing.JComboBox<String> allowHintsOption;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel codebrakerLabel;
    private javax.swing.JLabel codemakerLabel;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> playerAsCodebraker;
    private javax.swing.JComboBox<String> playerAsCodemaker;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
